version: 2.1
orbs:
  node: circleci/node@5
  aws-s3: circleci/aws-s3@4.0.0 # use the AWS S3 orb in your configuration
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  checkout_and_install:
    executor: node/default
    working_directory: ~/project/api-vite
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install dependencies
          command: npm install
      - persist_to_workspace:
          root: .
          paths:
            - .
            
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/api-vite
    steps:
      - attach_workspace:
          at: ~/project/api-vite
      - run:
          name: Vite build
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cibuilds/aws:latest
        environment:
          AWS_ACCESS_KEY_ID: ASIAYS5JOJWIZHNO3QHT
          AWS_SECRET_ACCESS_KEY: ykp3v3chN9qedoAD0yGx2fPFtOQYL4uJfe7ko0wo
    steps:
      - checkout
      - aws-cli/setup:
          aws_access_key_id: ASIAYS5JOJWIZHNO3QHT
          aws_secret_access_key: ykp3v3chN9qedoAD0yGx2fPFtOQYL4uJfe7ko0wo
          region: us-east-1
    
      - aws-s3/sync:
          # auth:
          # - aws-cli/setup:
          #       role_arn: arn:aws:iam::590376488337:role/aws-controltower-AdministratorExecutionRole
          from: bucket
          to: 's3://myviteapi'

  testing:
    executor: node/default
    working_directory: ~/project/api-vite
    steps:
      - attach_workspace:
          at: ~/project/api-vite
      - run:
          name: Run tests
          command: npx jest --ci --runInBand --reporters=default --reporters=jest-junit 
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_test_results:
          path: ./reports/

workflows:
  test_and_build:
    jobs:
      # - checkout_and_install
      # - build-node:
      #     requires:
      #       - checkout_and_install
      # - testing:
      #     requires:
      #       - checkout_and_install
      - deploy:
          # requires:
          #   - build-node # Only run deploy job once the build job has completed
          filters:
            branches:
              only: main # Only deploy when the commit is on the Main branch

